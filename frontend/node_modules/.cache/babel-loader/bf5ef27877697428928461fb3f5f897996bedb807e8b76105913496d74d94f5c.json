{"ast":null,"code":"var _jsxFileName = \"/home/chelsynew/Desktop/expense-tracker_fullstack-master/frontend/src/Components/Chart/Chart.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Chart as ChartJs, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, ArcElement } from 'chart.js';\nimport { Line } from 'react-chartjs-2';\nimport styled from 'styled-components';\nimport { useGlobalContext } from '../../context/globalContext';\nimport { dateFormat } from '../../utils/dateFormat';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJs.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, ArcElement);\nfunction Chart() {\n  _s();\n  const {\n    incomes,\n    expenses\n  } = useGlobalContext();\n\n  // Array of all month names\n  const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n\n  // Group incomes and expenses by month\n  const groupByMonth = data => {\n    return data.reduce((acc, curr) => {\n      const monthIndex = new Date(curr.date).getMonth(); // Get month index (0-11)\n      const amount = curr.amount;\n      if (!acc[monthIndex]) {\n        acc[monthIndex] = 0;\n      }\n      acc[monthIndex] += amount;\n      return acc;\n    }, new Array(12).fill(0)); // Initialize with 0 for all 12 months\n  };\n\n  // Aggregating amounts\n  const monthlyIncomes = groupByMonth(incomes);\n  const monthlyExpenses = groupByMonth(expenses);\n\n  // Preparing the data for the chart\n  const data = {\n    labels: months,\n    // Use month names as labels\n    datasets: [{\n      label: 'Income',\n      data: monthlyIncomes,\n      backgroundColor: 'green',\n      borderColor: 'green',\n      borderWidth: 2,\n      tension: 0,\n      // No curve in the line\n      fill: false,\n      // No fill under the line\n      pointRadius: 5,\n      // Size of the dots\n      pointHoverRadius: 7 // Size of the dots when hovered\n    }, {\n      label: 'Expenses',\n      data: monthlyExpenses,\n      backgroundColor: 'red',\n      borderColor: 'red',\n      borderWidth: 2,\n      tension: 0,\n      // No curve in the line\n      fill: false,\n      // No fill under the line\n      pointRadius: 5,\n      // Size of the dots\n      pointHoverRadius: 7 // Size of the dots when hovered\n    }]\n  };\n\n  return /*#__PURE__*/_jsxDEV(ChartStyled, {\n    children: /*#__PURE__*/_jsxDEV(Line, {\n      data: data,\n      options: {\n        responsive: true,\n        plugins: {\n          legend: {\n            display: true,\n            position: 'top'\n          },\n          tooltip: {\n            mode: 'index',\n            // Show tooltip for all datasets at the same x-axis value\n            intersect: false\n          }\n        },\n        scales: {\n          x: {\n            title: {\n              display: true,\n              text: 'Months'\n            }\n          },\n          y: {\n            title: {\n              display: true,\n              text: 'Amount'\n            },\n            beginAtZero: true // Start y-axis from 0\n          }\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 9\n  }, this);\n}\n_s(Chart, \"PHep46UhTemPLuSa3MfIkZAuTiE=\", false, function () {\n  return [useGlobalContext];\n});\n_c = Chart;\nconst ChartStyled = styled.div`\n    background: #FCF6F9;\n    border: 2px solid #FFFFFF;\n    box-shadow: 0px 1px 15px rgba(0, 0, 0, 0.06);\n    padding: 1rem;\n    border-radius: 20px;\n    height: 100%;\n`;\n_c2 = ChartStyled;\nexport default Chart;\nvar _c, _c2;\n$RefreshReg$(_c, \"Chart\");\n$RefreshReg$(_c2, \"ChartStyled\");","map":{"version":3,"names":["React","Chart","ChartJs","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","ArcElement","Line","styled","useGlobalContext","dateFormat","register","incomes","expenses","months","groupByMonth","data","reduce","acc","curr","monthIndex","Date","date","getMonth","amount","Array","fill","monthlyIncomes","monthlyExpenses","labels","datasets","label","backgroundColor","borderColor","borderWidth","tension","pointRadius","pointHoverRadius","responsive","plugins","legend","display","position","tooltip","mode","intersect","scales","x","title","text","y","beginAtZero","ChartStyled","div"],"sources":["/home/chelsynew/Desktop/expense-tracker_fullstack-master/frontend/src/Components/Chart/Chart.js"],"sourcesContent":["import React from 'react';\nimport {\n    Chart as ChartJs,\n    CategoryScale,\n    LinearScale,\n    PointElement,\n    LineElement,\n    Title,\n    Tooltip,\n    Legend,\n    ArcElement,\n} from 'chart.js';\nimport { Line } from 'react-chartjs-2';\nimport styled from 'styled-components';\nimport { useGlobalContext } from '../../context/globalContext';\nimport { dateFormat } from '../../utils/dateFormat';\n\nChartJs.register(\n    CategoryScale,\n    LinearScale,\n    PointElement,\n    LineElement,\n    Title,\n    Tooltip,\n    Legend,\n    ArcElement,\n);\n\nfunction Chart() {\n    const { incomes, expenses } = useGlobalContext();\n\n    // Array of all month names\n    const months = [\n        'January', 'February', 'March', 'April', 'May', 'June',\n        'July', 'August', 'September', 'October', 'November', 'December'\n    ];\n\n    // Group incomes and expenses by month\n    const groupByMonth = (data) => {\n        return data.reduce((acc, curr) => {\n            const monthIndex = new Date(curr.date).getMonth(); // Get month index (0-11)\n            const amount = curr.amount;\n\n            if (!acc[monthIndex]) {\n                acc[monthIndex] = 0;\n            }\n            acc[monthIndex] += amount;\n            return acc;\n        }, new Array(12).fill(0)); // Initialize with 0 for all 12 months\n    };\n\n    // Aggregating amounts\n    const monthlyIncomes = groupByMonth(incomes);\n    const monthlyExpenses = groupByMonth(expenses);\n\n    // Preparing the data for the chart\n    const data = {\n        labels: months, // Use month names as labels\n        datasets: [\n            {\n                label: 'Income',\n                data: monthlyIncomes,\n                backgroundColor: 'green',\n                borderColor: 'green',\n                borderWidth: 2,\n                tension: 0, // No curve in the line\n                fill: false, // No fill under the line\n                pointRadius: 5, // Size of the dots\n                pointHoverRadius: 7, // Size of the dots when hovered\n            },\n            {\n                label: 'Expenses',\n                data: monthlyExpenses,\n                backgroundColor: 'red',\n                borderColor: 'red',\n                borderWidth: 2,\n                tension: 0, // No curve in the line\n                fill: false, // No fill under the line\n                pointRadius: 5, // Size of the dots\n                pointHoverRadius: 7, // Size of the dots when hovered\n            }\n        ]\n    };\n\n    return (\n        <ChartStyled>\n            <Line \n                data={data} \n                options={{\n                    responsive: true,\n                    plugins: {\n                        legend: {\n                            display: true,\n                            position: 'top',\n                        },\n                        tooltip: {\n                            mode: 'index', // Show tooltip for all datasets at the same x-axis value\n                            intersect: false,\n                        },\n                    },\n                    scales: {\n                        x: {\n                            title: {\n                                display: true,\n                                text: 'Months',\n                            },\n                        },\n                        y: {\n                            title: {\n                                display: true,\n                                text: 'Amount',\n                            },\n                            beginAtZero: true, // Start y-axis from 0\n                        },\n                    },\n                }} \n            />\n        </ChartStyled>\n    );\n}\n\nconst ChartStyled = styled.div`\n    background: #FCF6F9;\n    border: 2px solid #FFFFFF;\n    box-shadow: 0px 1px 15px rgba(0, 0, 0, 0.06);\n    padding: 1rem;\n    border-radius: 20px;\n    height: 100%;\n`;\n\nexport default Chart;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}