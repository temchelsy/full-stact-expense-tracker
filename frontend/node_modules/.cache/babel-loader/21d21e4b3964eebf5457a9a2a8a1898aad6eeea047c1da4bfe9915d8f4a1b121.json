{"ast":null,"code":"var _jsxFileName = \"/home/chelsynew/Desktop/expense-tracker_fullstack-master/frontend/src/Components/Auth/registration.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport './registration.css';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Registration = _ref => {\n  _s();\n  let {\n    onAuthenticate,\n    onFormSwitch\n  } = _ref;\n  // Destructure onFormSwitch from props\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const [successMessage, setSuccessMessage] = useState('');\n  const navigate = useNavigate();\n  const validatePassword = password => {\n    if (password.length < 8) {\n      return 'Password must be at least 8 characters long.';\n    }\n    if (!/[A-Z]/.test(password)) {\n      return 'Password must contain at least one uppercase letter.';\n    }\n    if (!/[a-z]/.test(password)) {\n      return 'Password must contain at least one lowercase letter.';\n    }\n    if (!/[0-9]/.test(password)) {\n      return 'Password must contain at least one number.';\n    }\n    return '';\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setErrorMessage('');\n    setSuccessMessage('');\n    if (!firstName || !lastName) {\n      setErrorMessage('First name and last name are required.');\n      return;\n    }\n    const passwordValidationMessage = validatePassword(password);\n    if (passwordValidationMessage) {\n      setErrorMessage(passwordValidationMessage);\n      return;\n    }\n    if (password !== confirmPassword) {\n      setErrorMessage('Passwords do not match.');\n      return;\n    }\n    try {\n      const response = await fetch('https://full-stact-expense-tracker.onrender.com/api/v1/register', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          firstName,\n          lastName,\n          email,\n          password\n        })\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        setErrorMessage(errorData.error || 'An error occurred. Please try again.');\n        return;\n      }\n      setSuccessMessage('Registration successful! You can now log in.');\n      onAuthenticate(true); // Pass true to indicate authenticated\n      navigate('/login'); // Redirect to login page\n    } catch (error) {\n      setErrorMessage('An error occurred during registration.');\n      console.error('Error:', error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"background-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-message\",\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 34\n      }, this), successMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"success-message\",\n        children: successMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 36\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"registration-form\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"firstName\",\n          children: \"First Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: firstName,\n          onChange: e => setFirstName(e.target.value),\n          type: \"text\",\n          placeholder: \"John\",\n          id: \"firstName\",\n          name: \"firstName\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"lastName\",\n          children: \"Last Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: lastName,\n          onChange: e => setLastName(e.target.value),\n          type: \"text\",\n          placeholder: \"Doe\",\n          id: \"lastName\",\n          name: \"lastName\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          type: \"email\",\n          placeholder: \"youremail@gmail.com\",\n          id: \"email\",\n          name: \"email\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          type: \"password\",\n          placeholder: \"password\",\n          id: \"password\",\n          name: \"password\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"confirmPassword\",\n          children: \"Confirm Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: confirmPassword,\n          onChange: e => setConfirmPassword(e.target.value),\n          type: \"password\",\n          placeholder: \"confirm password\",\n          id: \"confirmPassword\",\n          name: \"confirmPassword\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"link-btn\",\n        onClick: () => onFormSwitch('login'),\n        children: \"Already have an account? Log in here.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 9\n  }, this);\n};\n_s(Registration, \"5sAswZF3SIwLWWrvXBdsWpTw3U8=\", false, function () {\n  return [useNavigate];\n});\n_c = Registration;\nvar _c;\n$RefreshReg$(_c, \"Registration\");","map":{"version":3,"names":["React","useState","useNavigate","Registration","onAuthenticate","onFormSwitch","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","firstName","setFirstName","lastName","setLastName","errorMessage","setErrorMessage","successMessage","setSuccessMessage","navigate","validatePassword","length","test","handleSubmit","e","preventDefault","passwordValidationMessage","response","fetch","method","headers","body","JSON","stringify","ok","errorData","json","error","console","message","target","value"],"sources":["/home/chelsynew/Desktop/expense-tracker_fullstack-master/frontend/src/Components/Auth/registration.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport './registration.css';\nimport { useNavigate } from 'react-router-dom'; \n\nexport const Registration = ({ onAuthenticate, onFormSwitch }) => {  // Destructure onFormSwitch from props\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [confirmPassword, setConfirmPassword] = useState('');\n    const [firstName, setFirstName] = useState('');\n    const [lastName, setLastName] = useState('');\n    const [errorMessage, setErrorMessage] = useState('');\n    const [successMessage, setSuccessMessage] = useState('');\n    const navigate = useNavigate(); \n\n    const validatePassword = (password) => {\n        if (password.length < 8) {\n            return 'Password must be at least 8 characters long.';\n        }\n        if (!/[A-Z]/.test(password)) {\n            return 'Password must contain at least one uppercase letter.';\n        }\n        if (!/[a-z]/.test(password)) {\n            return 'Password must contain at least one lowercase letter.';\n        }\n        if (!/[0-9]/.test(password)) {\n            return 'Password must contain at least one number.';\n        }\n        return '';\n    };\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        setErrorMessage('');\n        setSuccessMessage('');\n\n        if (!firstName || !lastName) {\n            setErrorMessage('First name and last name are required.');\n            return;\n        }\n\n        const passwordValidationMessage = validatePassword(password);\n        if (passwordValidationMessage) {\n            setErrorMessage(passwordValidationMessage);\n            return;\n        }\n\n        if (password !== confirmPassword) {\n            setErrorMessage('Passwords do not match.');\n            return;\n        }\n\n        try {\n            const response = await fetch('https://full-stact-expense-tracker.onrender.com/api/v1/register', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({ firstName, lastName, email, password }),\n            });\n\n            if (!response.ok) {\n                const errorData = await response.json();\n                setErrorMessage(errorData.error || 'An error occurred. Please try again.');\n                return;\n            }\n\n            setSuccessMessage('Registration successful! You can now log in.');\n            onAuthenticate(true); // Pass true to indicate authenticated\n            navigate('/login'); // Redirect to login page\n        } catch (error) {\n            setErrorMessage('An error occurred during registration.');\n            console.error('Error:', error.message);\n        }\n    };\n\n    return (\n        <div className=\"background-container\">\n            <div className=\"form-container\">\n                <h2>Register</h2>\n                {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\n                {successMessage && <p className=\"success-message\">{successMessage}</p>}\n                <form className=\"registration-form\" onSubmit={handleSubmit}>\n                    <label htmlFor=\"firstName\">First Name</label>\n                    <input\n                        value={firstName}\n                        onChange={(e) => setFirstName(e.target.value)}\n                        type=\"text\"\n                        placeholder=\"John\"\n                        id=\"firstName\"\n                        name=\"firstName\"\n                        required\n                    />\n                    <label htmlFor=\"lastName\">Last Name</label>\n                    <input\n                        value={lastName}\n                        onChange={(e) => setLastName(e.target.value)}\n                        type=\"text\"\n                        placeholder=\"Doe\"\n                        id=\"lastName\"\n                        name=\"lastName\"\n                        required\n                    />\n                    <label htmlFor=\"email\">Email</label>\n                    <input\n                        value={email}\n                        onChange={(e) => setEmail(e.target.value)}\n                        type=\"email\"\n                        placeholder=\"youremail@gmail.com\"\n                        id=\"email\"\n                        name=\"email\"\n                        required\n                    />\n                    <label htmlFor=\"password\">Password</label>\n                    <input\n                        value={password}\n                        onChange={(e) => setPassword(e.target.value)}\n                        type=\"password\"\n                        placeholder=\"password\"\n                        id=\"password\"\n                        name=\"password\"\n                        required\n                    />\n                    <label htmlFor=\"confirmPassword\">Confirm Password</label>\n                    <input\n                        value={confirmPassword}\n                        onChange={(e) => setConfirmPassword(e.target.value)}\n                        type=\"password\"\n                        placeholder=\"confirm password\"\n                        id=\"confirmPassword\"\n                        name=\"confirmPassword\"\n                        required\n                    />\n                    <button type=\"submit\">Register</button>\n                </form>\n                <button className=\"link-btn\" onClick={() => onFormSwitch('login')}>\n                    Already have an account? Log in here.\n                </button>\n            </div>\n        </div>\n    );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}