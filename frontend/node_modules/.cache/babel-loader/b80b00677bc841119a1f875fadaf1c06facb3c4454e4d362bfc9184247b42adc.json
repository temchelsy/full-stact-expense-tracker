{"ast":null,"code":"var _jsxFileName = \"/home/chelsynew/Desktop/expense-tracker_fullstack-master/frontend/src/Components/Auth/login.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport './login.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Login = props => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [rememberMe, setRememberMe] = useState(false); // New state for remember me\n  const [errorMessage, setErrorMessage] = useState('');\n  const [successMessage, setSuccessMessage] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setErrorMessage('');\n    setSuccessMessage('');\n    if (!email || !password) {\n      setErrorMessage('Email and password are required');\n      return;\n    }\n    try {\n      const response = await fetch('http://localhost:5000/login/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email,\n          password\n        })\n      });\n      if (response.ok) {\n        const data = await response.json();\n        setSuccessMessage('Login successful!');\n        console.log('Login successful:', data);\n\n        // Handle Remember Me functionality\n        if (rememberMe) {\n          localStorage.setItem('email', email); // Store email in local storage\n        } else {\n          localStorage.removeItem('email'); // Remove email if not remembered\n        }\n      } else {\n        const errorData = await response.json();\n        setErrorMessage(errorData.error || 'Login failed. Please try again.');\n      }\n    } catch (error) {\n      setErrorMessage('An error occurred. Please try again.');\n      console.error('Error:', error.message);\n    }\n  };\n\n  // Load email from local storage on component mount\n  React.useEffect(() => {\n    const storedEmail = localStorage.getItem('email');\n    if (storedEmail) {\n      setEmail(storedEmail);\n      setRememberMe(true);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"background-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-message\",\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 34\n      }, this), successMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"success-message\",\n        children: successMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 36\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"login-form\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          type: \"email\",\n          placeholder: \"youremail@gmail.com\",\n          id: \"email\",\n          name: \"email\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          type: \"password\",\n          placeholder: \"password\",\n          id: \"password\",\n          name: \"password\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"remember-me\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            id: \"rememberMe\",\n            checked: rememberMe,\n            onChange: () => setRememberMe(!rememberMe)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"rememberMe\",\n            children: \"Remember Me\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Log In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"link-btn\",\n        onClick: () => props.onFormSwitch('register'),\n        children: \"Don't have an account? Register here.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n};\n_s(Login, \"objEwOFPymZbj7MJJQ6aVfPPTVA=\");\n_c = Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","Login","props","email","setEmail","password","setPassword","rememberMe","setRememberMe","errorMessage","setErrorMessage","successMessage","setSuccessMessage","handleSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","ok","data","json","console","log","localStorage","setItem","removeItem","errorData","error","message","useEffect","storedEmail","getItem","target","value","onFormSwitch"],"sources":["/home/chelsynew/Desktop/expense-tracker_fullstack-master/frontend/src/Components/Auth/login.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport './login.css';\n\nexport const Login = (props) => {\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [rememberMe, setRememberMe] = useState(false); // New state for remember me\n    const [errorMessage, setErrorMessage] = useState('');\n    const [successMessage, setSuccessMessage] = useState('');\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        setErrorMessage('');\n        setSuccessMessage('');\n\n        if (!email || !password) {\n            setErrorMessage('Email and password are required');\n            return;\n        }\n\n        try {\n            const response = await fetch('http://localhost:5000/login/login', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({ email, password }),\n            });\n\n            if (response.ok) {\n                const data = await response.json();\n                setSuccessMessage('Login successful!');\n                console.log('Login successful:', data);\n                \n                // Handle Remember Me functionality\n                if (rememberMe) {\n                    localStorage.setItem('email', email); // Store email in local storage\n                } else {\n                    localStorage.removeItem('email'); // Remove email if not remembered\n                }\n            } else {\n                const errorData = await response.json();\n                setErrorMessage(errorData.error || 'Login failed. Please try again.');\n            }\n        } catch (error) {\n            setErrorMessage('An error occurred. Please try again.');\n            console.error('Error:', error.message);\n        }\n    };\n\n    // Load email from local storage on component mount\n    React.useEffect(() => {\n        const storedEmail = localStorage.getItem('email');\n        if (storedEmail) {\n            setEmail(storedEmail);\n            setRememberMe(true);\n        }\n    }, []);\n\n    return (\n        <div className=\"background-container\">\n            <div className=\"form-container\">\n                <h2>Login</h2>\n                {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\n                {successMessage && <p className=\"success-message\">{successMessage}</p>}\n                <form className=\"login-form\" onSubmit={handleSubmit}>\n                    <label htmlFor=\"email\">Email</label>\n                    <input\n                        value={email}\n                        onChange={(e) => setEmail(e.target.value)}\n                        type=\"email\"\n                        placeholder=\"youremail@gmail.com\"\n                        id=\"email\"\n                        name=\"email\"\n                        required\n                    />\n                    <label htmlFor=\"password\">Password</label>\n                    <input\n                        value={password}\n                        onChange={(e) => setPassword(e.target.value)}\n                        type=\"password\"\n                        placeholder=\"password\"\n                        id=\"password\"\n                        name=\"password\"\n                        required\n                    />\n                    <div className=\"remember-me\">\n                        <input\n                            type=\"checkbox\"\n                            id=\"rememberMe\"\n                            checked={rememberMe}\n                            onChange={() => setRememberMe(!rememberMe)}\n                        />\n                        <label htmlFor=\"rememberMe\">Remember Me</label>\n                    </div>\n                    <button type=\"submit\">Log In</button>\n                </form>\n                <button className=\"link-btn\" onClick={() => props.onFormSwitch('register')}>\n                    Don't have an account? Register here.\n                </button>\n            </div>\n        </div>\n    );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}