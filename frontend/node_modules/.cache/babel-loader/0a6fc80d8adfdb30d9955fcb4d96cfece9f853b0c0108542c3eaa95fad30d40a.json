{"ast":null,"code":"var _jsxFileName = \"/home/chelsynew/Desktop/expense-tracker_fullstack-master/frontend/src/Components/Auth/registration.jsx\",\n  _s = $RefreshSig$();\n// Registration.js\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Registration = _ref => {\n  _s();\n  let {\n    onAuthenticate,\n    onFormSwitch\n  } = _ref;\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const [successMessage, setSuccessMessage] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setErrorMessage('');\n    setSuccessMessage('');\n    if (!email || !password || password !== confirmPassword) {\n      setErrorMessage('Please fill in all fields correctly.');\n      return;\n    }\n    try {\n      const response = await fetch('https://full-stact-expense-tracker.onrender.com/api/v1/register', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email,\n          password\n        })\n      });\n      if (response.ok) {\n        const data = await response.json();\n        setSuccessMessage('Registration successful!');\n\n        // After successful registration, log in the user and redirect\n        onAuthenticate(true, '/dashboard'); // Redirect to Dashboard on success\n      } else {\n        const errorData = await response.json();\n        setErrorMessage(errorData.error || 'Registration failed. Please try again.');\n      }\n    } catch (error) {\n      setErrorMessage('An error occurred. Please try again.');\n      console.error('Error:', error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"background-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-message\",\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 34\n      }, this), successMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"success-message\",\n        children: successMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 36\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"registration-form\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          type: \"email\",\n          placeholder: \"youremail@gmail.com\",\n          id: \"email\",\n          name: \"email\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          type: \"password\",\n          placeholder: \"password\",\n          id: \"password\",\n          name: \"password\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"confirmPassword\",\n          children: \"Confirm Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: confirmPassword,\n          onChange: e => setConfirmPassword(e.target.value),\n          type: \"password\",\n          placeholder: \"confirm password\",\n          id: \"confirmPassword\",\n          name: \"confirmPassword\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"link-btn\",\n        onClick: () => onFormSwitch('login'),\n        children: \"Already have an account? Login here.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n};\n_s(Registration, \"VRHwReqBMKYPlhWIrzXJB48wx0I=\");\n_c = Registration;\nexport default Registration;\nvar _c;\n$RefreshReg$(_c, \"Registration\");","map":{"version":3,"names":["React","useState","Registration","onAuthenticate","onFormSwitch","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","errorMessage","setErrorMessage","successMessage","setSuccessMessage","handleSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","ok","data","json","errorData","error","console","message","target","value"],"sources":["/home/chelsynew/Desktop/expense-tracker_fullstack-master/frontend/src/Components/Auth/registration.jsx"],"sourcesContent":["// Registration.js\nimport React, { useState } from 'react';\n\nexport const Registration = ({ onAuthenticate, onFormSwitch }) => {\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [confirmPassword, setConfirmPassword] = useState('');\n    const [errorMessage, setErrorMessage] = useState('');\n    const [successMessage, setSuccessMessage] = useState('');\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        setErrorMessage('');\n        setSuccessMessage('');\n\n        if (!email || !password || password !== confirmPassword) {\n            setErrorMessage('Please fill in all fields correctly.');\n            return;\n        }\n\n        try {\n            const response = await fetch('https://full-stact-expense-tracker.onrender.com/api/v1/register', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({ email, password }),\n            });\n\n            if (response.ok) {\n                const data = await response.json();\n                setSuccessMessage('Registration successful!');\n\n                // After successful registration, log in the user and redirect\n                onAuthenticate(true, '/dashboard'); // Redirect to Dashboard on success\n            } else {\n                const errorData = await response.json();\n                setErrorMessage(errorData.error || 'Registration failed. Please try again.');\n            }\n        } catch (error) {\n            setErrorMessage('An error occurred. Please try again.');\n            console.error('Error:', error.message);\n        }\n    };\n\n    return (\n        <div className=\"background-container\">\n            <div className=\"form-container\">\n                <h2>Register</h2>\n                {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\n                {successMessage && <p className=\"success-message\">{successMessage}</p>}\n                <form className=\"registration-form\" onSubmit={handleSubmit}>\n                    <label htmlFor=\"email\">Email</label>\n                    <input\n                        value={email}\n                        onChange={(e) => setEmail(e.target.value)}\n                        type=\"email\"\n                        placeholder=\"youremail@gmail.com\"\n                        id=\"email\"\n                        name=\"email\"\n                        required\n                    />\n                    <label htmlFor=\"password\">Password</label>\n                    <input\n                        value={password}\n                        onChange={(e) => setPassword(e.target.value)}\n                        type=\"password\"\n                        placeholder=\"password\"\n                        id=\"password\"\n                        name=\"password\"\n                        required\n                    />\n                    <label htmlFor=\"confirmPassword\">Confirm Password</label>\n                    <input\n                        value={confirmPassword}\n                        onChange={(e) => setConfirmPassword(e.target.value)}\n                        type=\"password\"\n                        placeholder=\"confirm password\"\n                        id=\"confirmPassword\"\n                        name=\"confirmPassword\"\n                        required\n                    />\n                    <button type=\"submit\">Register</button>\n                </form>\n                <button className=\"link-btn\" onClick={() => onFormSwitch('login')}>\n                    Already have an account? Login here.\n                </button>\n            </div>\n        </div>\n    );\n};\nexport default Registration;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}