{"ast":null,"code":"var _jsxFileName = \"/home/chelsynew/Desktop/expense-tracker_fullstack-master/frontend/src/context/globalContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useContext, useState } from \"react\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BASE_URL = \"https://full-stact-expense-tracker.onrender.com/api/v1/\";\nconst GlobalContext = /*#__PURE__*/React.createContext();\nexport const GlobalProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [incomes, setIncomes] = useState([]);\n  const [expenses, setExpenses] = useState([]);\n  const [error, setError] = useState(null);\n  const [userId, setUserId] = useState(null); // Store the user ID here\n\n  // Set user ID after login\n  const setCurrentUserId = id => {\n    setUserId(id);\n  };\n\n  // Calculate total incomes\n  const addIncome = async income => {\n    const response = await axios.post(`${BASE_URL}add-income`, {\n      ...income,\n      userId\n    }) // Include user ID\n    .catch(err => {\n      setError(err.response.data.message);\n    });\n    getIncomes();\n  };\n  const getIncomes = async () => {\n    if (!userId) return; // Ensure user ID is available\n    const response = await axios.get(`${BASE_URL}get-incomes`, {\n      params: {\n        userId\n      }\n    }); // Include user ID\n    setIncomes(response.data);\n    console.log(response.data);\n  };\n  const deleteIncome = async id => {\n    const res = await axios.delete(`${BASE_URL}delete-income/${id}`);\n    getIncomes();\n  };\n  const totalIncome = () => {\n    return incomes.reduce((total, income) => total + income.amount, 0);\n  };\n\n  // Calculate total expenses\n  const addExpense = async expense => {\n    const response = await axios.post(`${BASE_URL}add-expense`, {\n      ...expense,\n      userId\n    }) // Include user ID\n    .catch(err => {\n      setError(err.response.data.message);\n    });\n    getExpenses();\n  };\n  const getExpenses = async () => {\n    if (!userId) return; // Ensure user ID is available\n    const response = await axios.get(`${BASE_URL}get-expenses`, {\n      params: {\n        userId\n      }\n    }); // Include user ID\n    setExpenses(response.data);\n    console.log(response.data);\n  };\n  const deleteExpense = async id => {\n    const res = await axios.delete(`${BASE_URL}delete-expense/${id}`);\n    getExpenses();\n  };\n  const totalExpenses = () => {\n    return expenses.reduce((total, expense) => total + expense.amount, 0);\n  };\n  const totalBalance = () => {\n    return totalIncome() - totalExpenses();\n  };\n  const transactionHistory = () => {\n    const history = [...incomes, ...expenses];\n    history.sort((a, b) => {\n      return new Date(b.createdAt) - new Date(a.createdAt);\n    });\n    return history.slice(0, 3);\n  };\n  return /*#__PURE__*/_jsxDEV(GlobalContext.Provider, {\n    value: {\n      addIncome,\n      getIncomes,\n      incomes,\n      deleteIncome,\n      expenses,\n      totalIncome,\n      addExpense,\n      getExpenses,\n      deleteExpense,\n      totalExpenses,\n      totalBalance,\n      transactionHistory,\n      error,\n      setError,\n      setCurrentUserId,\n      // Expose function to set user ID\n      userId // Provide user ID\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 9\n  }, this);\n};\n_s(GlobalProvider, \"+KuwcUc11zm7Crwwiu0/JccxpRU=\");\n_c = GlobalProvider;\nexport const useGlobalContext = () => {\n  _s2();\n  return useContext(GlobalContext);\n};\n_s2(useGlobalContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"GlobalProvider\");","map":{"version":3,"names":["React","useContext","useState","axios","BASE_URL","GlobalContext","createContext","GlobalProvider","children","incomes","setIncomes","expenses","setExpenses","error","setError","userId","setUserId","setCurrentUserId","id","addIncome","income","response","post","catch","err","data","message","getIncomes","get","params","console","log","deleteIncome","res","delete","totalIncome","reduce","total","amount","addExpense","expense","getExpenses","deleteExpense","totalExpenses","totalBalance","transactionHistory","history","sort","a","b","Date","createdAt","slice","useGlobalContext"],"sources":["/home/chelsynew/Desktop/expense-tracker_fullstack-master/frontend/src/context/globalContext.js"],"sourcesContent":["import React, { useContext, useState } from \"react\";\nimport axios from 'axios';\n\nconst BASE_URL = \"https://full-stact-expense-tracker.onrender.com/api/v1/\";\n\nconst GlobalContext = React.createContext();\n\nexport const GlobalProvider = ({children}) => {\n    const [incomes, setIncomes] = useState([]);\n    const [expenses, setExpenses] = useState([]);\n    const [error, setError] = useState(null);\n    const [userId, setUserId] = useState(null); // Store the user ID here\n\n    // Set user ID after login\n    const setCurrentUserId = (id) => {\n        setUserId(id);\n    };\n\n    // Calculate total incomes\n    const addIncome = async (income) => {\n        const response = await axios.post(`${BASE_URL}add-income`, { ...income, userId }) // Include user ID\n            .catch((err) => {\n                setError(err.response.data.message);\n            });\n        getIncomes();\n    };\n\n    const getIncomes = async () => {\n        if (!userId) return; // Ensure user ID is available\n        const response = await axios.get(`${BASE_URL}get-incomes`, { params: { userId } }); // Include user ID\n        setIncomes(response.data);\n        console.log(response.data);\n    };\n\n    const deleteIncome = async (id) => {\n        const res = await axios.delete(`${BASE_URL}delete-income/${id}`);\n        getIncomes();\n    };\n\n    const totalIncome = () => {\n        return incomes.reduce((total, income) => total + income.amount, 0);\n    };\n\n    // Calculate total expenses\n    const addExpense = async (expense) => {\n        const response = await axios.post(`${BASE_URL}add-expense`, { ...expense, userId }) // Include user ID\n            .catch((err) => {\n                setError(err.response.data.message);\n            });\n        getExpenses();\n    };\n\n    const getExpenses = async () => {\n        if (!userId) return; // Ensure user ID is available\n        const response = await axios.get(`${BASE_URL}get-expenses`, { params: { userId } }); // Include user ID\n        setExpenses(response.data);\n        console.log(response.data);\n    };\n\n    const deleteExpense = async (id) => {\n        const res = await axios.delete(`${BASE_URL}delete-expense/${id}`);\n        getExpenses();\n    };\n\n    const totalExpenses = () => {\n        return expenses.reduce((total, expense) => total + expense.amount, 0);\n    };\n\n    const totalBalance = () => {\n        return totalIncome() - totalExpenses();\n    };\n\n    const transactionHistory = () => {\n        const history = [...incomes, ...expenses];\n        history.sort((a, b) => {\n            return new Date(b.createdAt) - new Date(a.createdAt);\n        });\n        return history.slice(0, 3);\n    };\n\n    return (\n        <GlobalContext.Provider value={{\n            addIncome,\n            getIncomes,\n            incomes,\n            deleteIncome,\n            expenses,\n            totalIncome,\n            addExpense,\n            getExpenses,\n            deleteExpense,\n            totalExpenses,\n            totalBalance,\n            transactionHistory,\n            error,\n            setError,\n            setCurrentUserId, // Expose function to set user ID\n            userId, // Provide user ID\n        }}>\n            {children}\n        </GlobalContext.Provider>\n    );\n};\n\nexport const useGlobalContext = () => {\n    return useContext(GlobalContext);\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}