{"ast":null,"code":"var _jsxFileName = \"/home/chelsynew/Desktop/expense-tracker_fullstack/frontend/src/Components/Auth/login.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './login.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Login = _ref => {\n  _s();\n  let {\n    onAuthenticate,\n    onFormSwitch\n  } = _ref;\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [rememberMe, setRememberMe] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [successMessage, setSuccessMessage] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const navigate = useNavigate();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setErrorMessage('');\n    setSuccessMessage('');\n    setIsLoading(true);\n    if (!email || !password) {\n      setErrorMessage('Email and password are required');\n      setIsLoading(false);\n      return;\n    }\n    try {\n      const response = await fetch('https://full-stact-expense-tracker.onrender.com/api/v1/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email,\n          password\n        })\n      });\n      if (response.ok) {\n        const data = await response.json();\n\n        // Log the entire response to check for the token\n        console.log('Server Response:', data);\n        if (data.token) {\n          setSuccessMessage('Login successful!');\n\n          // Store the token in localStorage\n          localStorage.setItem('token', data.token);\n\n          // Handle \"Remember Me\" logic\n          if (rememberMe) {\n            localStorage.setItem('email', email);\n          } else {\n            localStorage.removeItem('email');\n          }\n\n          // Call authentication handler and navigate to home\n          onAuthenticate(true, '/');\n        } else {\n          setErrorMessage('Login successful, but no token received. Please try again.');\n        }\n      } else {\n        const errorData = await response.json();\n        setErrorMessage(errorData.error || 'Login failed. Please try again.');\n      }\n    } catch (error) {\n      setErrorMessage('An error occurred. Please try again.');\n      console.error('Error:', error.message);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"background-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-message\",\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 34\n      }, this), successMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"success-message\",\n        children: successMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 36\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"login-form\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          type: \"email\",\n          placeholder: \"youremail@gmail.com\",\n          id: \"email\",\n          name: \"email\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          type: \"password\",\n          placeholder: \"password\",\n          id: \"password\",\n          name: \"password\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"remember-me\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            id: \"rememberMe\",\n            checked: rememberMe,\n            onChange: () => setRememberMe(!rememberMe)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"rememberMe\",\n            children: \"Remember Me\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: isLoading,\n          children: isLoading ? 'Logging in...' : 'Log In'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loader\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 35\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"link-btn\",\n        onClick: () => onFormSwitch('register'),\n        children: \"Don't have an account? Register here.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 9\n  }, this);\n};\n_s(Login, \"XdggwAEe0vb809KxzdtIdZKk14k=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useNavigate","Login","onAuthenticate","onFormSwitch","email","setEmail","password","setPassword","rememberMe","setRememberMe","errorMessage","setErrorMessage","successMessage","setSuccessMessage","isLoading","setIsLoading","navigate","handleSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","ok","data","json","console","log","token","localStorage","setItem","removeItem","errorData","error","message","target","value"],"sources":["/home/chelsynew/Desktop/expense-tracker_fullstack/frontend/src/Components/Auth/login.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './login.css';\n\nexport const Login = ({ onAuthenticate, onFormSwitch }) => {\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [rememberMe, setRememberMe] = useState(false);\n    const [errorMessage, setErrorMessage] = useState('');\n    const [successMessage, setSuccessMessage] = useState('');\n    const [isLoading, setIsLoading] = useState(false);\n    const navigate = useNavigate();\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        setErrorMessage('');\n        setSuccessMessage('');\n        setIsLoading(true);\n\n        if (!email || !password) {\n            setErrorMessage('Email and password are required');\n            setIsLoading(false);\n            return;\n        }\n\n        try {\n            const response = await fetch('https://full-stact-expense-tracker.onrender.com/api/v1/login', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({ email, password }),\n            });\n\n            if (response.ok) {\n                const data = await response.json();\n                \n                // Log the entire response to check for the token\n                console.log('Server Response:', data);\n                \n                if (data.token) {\n                    setSuccessMessage('Login successful!');\n\n                    // Store the token in localStorage\n                    localStorage.setItem('token', data.token);\n\n                    // Handle \"Remember Me\" logic\n                    if (rememberMe) {\n                        localStorage.setItem('email', email);\n                    } else {\n                        localStorage.removeItem('email');\n                    }\n\n                    // Call authentication handler and navigate to home\n                    onAuthenticate(true, '/');\n                } else {\n                    setErrorMessage('Login successful, but no token received. Please try again.');\n                }\n\n            } else {\n                const errorData = await response.json();\n                setErrorMessage(errorData.error || 'Login failed. Please try again.');\n            }\n        } catch (error) {\n            setErrorMessage('An error occurred. Please try again.');\n            console.error('Error:', error.message);\n        } finally {\n            setIsLoading(false);\n        }\n    };\n\n    return (\n        <div className=\"background-container\">\n            <div className=\"form-container\">\n                <h2>Login</h2>\n                {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\n                {successMessage && <p className=\"success-message\">{successMessage}</p>}\n                <form className=\"login-form\" onSubmit={handleSubmit}>\n                    <label htmlFor=\"email\">Email</label>\n                    <input\n                        value={email}\n                        onChange={(e) => setEmail(e.target.value)}\n                        type=\"email\"\n                        placeholder=\"youremail@gmail.com\"\n                        id=\"email\"\n                        name=\"email\"\n                        required\n                    />\n                    <label htmlFor=\"password\">Password</label>\n                    <input\n                        value={password}\n                        onChange={(e) => setPassword(e.target.value)}\n                        type=\"password\"\n                        placeholder=\"password\"\n                        id=\"password\"\n                        name=\"password\"\n                        required\n                    />\n                    <div className=\"remember-me\">\n                        <input\n                            type=\"checkbox\"\n                            id=\"rememberMe\"\n                            checked={rememberMe}\n                            onChange={() => setRememberMe(!rememberMe)}\n                        />\n                        <label htmlFor=\"rememberMe\">Remember Me</label>\n                    </div>\n                    <button type=\"submit\" disabled={isLoading}>\n                        {isLoading ? 'Logging in...' : 'Log In'}\n                    </button>\n                    {isLoading && <div className=\"loader\"></div>}\n                </form>\n                <button className=\"link-btn\" onClick={() => onFormSwitch('register')}>\n                    Don't have an account? Register here.\n                </button>\n            </div>\n        </div>\n    );\n};\n\nexport default Login;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}