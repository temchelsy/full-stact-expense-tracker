{"ast":null,"code":"var _jsxFileName = \"/home/chelsynew/Desktop/expense-tracker_fullstack/frontend/src/context/globalContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useContext, useState, useEffect } from \"react\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BASE_URL = \"https://full-stact-expense-tracker.onrender.com/api/v1/\";\nconst GlobalContext = /*#__PURE__*/React.createContext();\nexport const GlobalProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [incomes, setIncomes] = useState([]);\n  const [expenses, setExpenses] = useState([]);\n  const [error, setError] = useState(null);\n  const [userId, setUserId] = useState(null);\n  const [token, setToken] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n\n  // Setup axios defaults and intercept all requests to add auth header\n  useEffect(() => {\n    // Create axios instance with default config\n    const axiosInstance = axios.create({\n      baseURL: BASE_URL,\n      timeout: 5000\n    });\n\n    // Request interceptor - adds token to all requests\n    axiosInstance.interceptors.request.use(config => {\n      const token = localStorage.getItem('token');\n      if (token) {\n        config.headers.Authorization = `Bearer ${token}`;\n        console.log('Request headers:', config.headers); // Debug log\n      }\n\n      return config;\n    }, error => {\n      console.error('Request interceptor error:', error);\n      return Promise.reject(error);\n    });\n\n    // Response interceptor - handle auth errors\n    axiosInstance.interceptors.response.use(response => response, error => {\n      var _error$response, _error$response2, _error$response3;\n      console.error('Response error:', (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status, (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data);\n      if (((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.status) === 401) {\n        console.log('401 error detected - clearing auth state');\n        localStorage.removeItem('token');\n        setToken(null);\n        setUserId(null);\n        setError('Session expired. Please login again.');\n        // Redirect to login page if needed\n        window.location.href = '/login';\n      }\n      return Promise.reject(error);\n    });\n\n    // Replace the default axios with our configured instance\n    global.axios = axiosInstance;\n  }, []);\n\n  // Initialize auth state\n  useEffect(() => {\n    const initializeAuth = async () => {\n      try {\n        const storedToken = localStorage.getItem('token');\n        console.log('Stored token:', storedToken ? 'exists' : 'not found');\n        if (storedToken) {\n          // Validate token with backend\n          try {\n            const response = await axios.post(`${BASE_URL}verify-token`, {\n              token: storedToken\n            });\n            if (response.data.valid) {\n              setToken(storedToken);\n              setUserId(response.data.userId);\n              console.log('Token validated successfully');\n            } else {\n              throw new Error('Invalid token');\n            }\n          } catch (error) {\n            console.error('Token validation failed:', error);\n            localStorage.removeItem('token');\n            setToken(null);\n            setUserId(null);\n          }\n        }\n      } catch (error) {\n        console.error('Auth initialization error:', error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    initializeAuth();\n  }, []);\n\n  // Login function\n  const login = async credentials => {\n    try {\n      const response = await axios.post(`${BASE_URL}login`, credentials);\n      const {\n        token: newToken,\n        userId: newUserId\n      } = response.data;\n      console.log('Login successful, setting new token');\n      localStorage.setItem('token', newToken);\n      setToken(newToken);\n      setUserId(newUserId);\n\n      // Refresh data after login\n      await Promise.all([getIncomes(), getExpenses()]);\n      return true;\n    } catch (error) {\n      var _error$response4, _error$response4$data;\n      console.error('Login error:', error);\n      setError(((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.message) || 'Login failed');\n      return false;\n    }\n  };\n\n  // Logout function\n  const logout = () => {\n    localStorage.removeItem('token');\n    setToken(null);\n    setUserId(null);\n    setIncomes([]);\n    setExpenses([]);\n    console.log('Logout completed');\n  };\n  const getExpenses = async () => {\n    try {\n      console.log('Fetching expenses...');\n      const currentToken = localStorage.getItem('token');\n      console.log('Current token:', currentToken ? 'exists' : 'missing');\n      if (!currentToken) {\n        throw new Error('No authentication token available');\n      }\n      const response = await axios.get(`${BASE_URL}get-expenses`);\n      console.log('Expenses fetched successfully:', response.data);\n      setExpenses(response.data);\n      return response.data;\n    } catch (error) {\n      var _error$response5, _error$response5$data;\n      console.error('Error fetching expenses:', error);\n      const errorMessage = ((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : (_error$response5$data = _error$response5.data) === null || _error$response5$data === void 0 ? void 0 : _error$response5$data.message) || 'Failed to get expenses';\n      setError(errorMessage);\n      throw new Error(errorMessage);\n    }\n  };\n\n  // ... rest of your existing functions ...\n\n  return /*#__PURE__*/_jsxDEV(GlobalContext.Provider, {\n    value: {\n      addIncome,\n      getIncomes,\n      incomes,\n      deleteIncome,\n      expenses,\n      totalIncome,\n      addExpense,\n      getExpenses,\n      deleteExpense,\n      totalExpenses,\n      totalBalance,\n      transactionHistory,\n      error,\n      setError,\n      userId,\n      setUserId,\n      token,\n      setToken,\n      login,\n      logout,\n      isLoading\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 158,\n    columnNumber: 9\n  }, this);\n};\n_s(GlobalProvider, \"EHUOdxbBQyZ/IgT9Vmq06N5axyk=\");\n_c = GlobalProvider;\nexport const useGlobalContext = () => {\n  _s2();\n  return useContext(GlobalContext);\n};\n_s2(useGlobalContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"GlobalProvider\");","map":{"version":3,"names":["React","useContext","useState","useEffect","axios","BASE_URL","GlobalContext","createContext","GlobalProvider","children","incomes","setIncomes","expenses","setExpenses","error","setError","userId","setUserId","token","setToken","isLoading","setIsLoading","axiosInstance","create","baseURL","timeout","interceptors","request","use","config","localStorage","getItem","headers","Authorization","console","log","Promise","reject","response","status","data","removeItem","window","location","href","global","initializeAuth","storedToken","post","valid","Error","login","credentials","newToken","newUserId","setItem","all","getIncomes","getExpenses","message","logout","currentToken","get","errorMessage","addIncome","deleteIncome","totalIncome","addExpense","deleteExpense","totalExpenses","totalBalance","transactionHistory","useGlobalContext"],"sources":["/home/chelsynew/Desktop/expense-tracker_fullstack/frontend/src/context/globalContext.js"],"sourcesContent":["import React, { useContext, useState, useEffect } from \"react\";\nimport axios from 'axios';\n\nconst BASE_URL = \"https://full-stact-expense-tracker.onrender.com/api/v1/\";\n\nconst GlobalContext = React.createContext();\n\nexport const GlobalProvider = ({ children }) => {\n    const [incomes, setIncomes] = useState([]);\n    const [expenses, setExpenses] = useState([]);\n    const [error, setError] = useState(null);\n    const [userId, setUserId] = useState(null);\n    const [token, setToken] = useState(null);\n    const [isLoading, setIsLoading] = useState(true);\n\n    // Setup axios defaults and intercept all requests to add auth header\n    useEffect(() => {\n        // Create axios instance with default config\n        const axiosInstance = axios.create({\n            baseURL: BASE_URL,\n            timeout: 5000,\n        });\n\n        // Request interceptor - adds token to all requests\n        axiosInstance.interceptors.request.use(\n            (config) => {\n                const token = localStorage.getItem('token');\n                if (token) {\n                    config.headers.Authorization = `Bearer ${token}`;\n                    console.log('Request headers:', config.headers); // Debug log\n                }\n                return config;\n            },\n            (error) => {\n                console.error('Request interceptor error:', error);\n                return Promise.reject(error);\n            }\n        );\n\n        // Response interceptor - handle auth errors\n        axiosInstance.interceptors.response.use(\n            (response) => response,\n            (error) => {\n                console.error('Response error:', error.response?.status, error.response?.data);\n                \n                if (error.response?.status === 401) {\n                    console.log('401 error detected - clearing auth state');\n                    localStorage.removeItem('token');\n                    setToken(null);\n                    setUserId(null);\n                    setError('Session expired. Please login again.');\n                    // Redirect to login page if needed\n                    window.location.href = '/login';\n                }\n                return Promise.reject(error);\n            }\n        );\n\n        // Replace the default axios with our configured instance\n        global.axios = axiosInstance;\n    }, []);\n\n    // Initialize auth state\n    useEffect(() => {\n        const initializeAuth = async () => {\n            try {\n                const storedToken = localStorage.getItem('token');\n                console.log('Stored token:', storedToken ? 'exists' : 'not found');\n\n                if (storedToken) {\n                    // Validate token with backend\n                    try {\n                        const response = await axios.post(`${BASE_URL}verify-token`, {\n                            token: storedToken\n                        });\n                        \n                        if (response.data.valid) {\n                            setToken(storedToken);\n                            setUserId(response.data.userId);\n                            console.log('Token validated successfully');\n                        } else {\n                            throw new Error('Invalid token');\n                        }\n                    } catch (error) {\n                        console.error('Token validation failed:', error);\n                        localStorage.removeItem('token');\n                        setToken(null);\n                        setUserId(null);\n                    }\n                }\n            } catch (error) {\n                console.error('Auth initialization error:', error);\n            } finally {\n                setIsLoading(false);\n            }\n        };\n\n        initializeAuth();\n    }, []);\n\n    // Login function\n    const login = async (credentials) => {\n        try {\n            const response = await axios.post(`${BASE_URL}login`, credentials);\n            const { token: newToken, userId: newUserId } = response.data;\n            \n            console.log('Login successful, setting new token');\n            localStorage.setItem('token', newToken);\n            setToken(newToken);\n            setUserId(newUserId);\n            \n            // Refresh data after login\n            await Promise.all([getIncomes(), getExpenses()]);\n            \n            return true;\n        } catch (error) {\n            console.error('Login error:', error);\n            setError(error.response?.data?.message || 'Login failed');\n            return false;\n        }\n    };\n\n    // Logout function\n    const logout = () => {\n        localStorage.removeItem('token');\n        setToken(null);\n        setUserId(null);\n        setIncomes([]);\n        setExpenses([]);\n        console.log('Logout completed');\n    };\n\n    const getExpenses = async () => {\n        try {\n            console.log('Fetching expenses...');\n            const currentToken = localStorage.getItem('token');\n            console.log('Current token:', currentToken ? 'exists' : 'missing');\n            \n            if (!currentToken) {\n                throw new Error('No authentication token available');\n            }\n\n            const response = await axios.get(`${BASE_URL}get-expenses`);\n            console.log('Expenses fetched successfully:', response.data);\n            setExpenses(response.data);\n            return response.data;\n        } catch (error) {\n            console.error('Error fetching expenses:', error);\n            const errorMessage = error.response?.data?.message || 'Failed to get expenses';\n            setError(errorMessage);\n            throw new Error(errorMessage);\n        }\n    };\n\n    // ... rest of your existing functions ...\n\n    return (\n        <GlobalContext.Provider value={{\n            addIncome,\n            getIncomes,\n            incomes,\n            deleteIncome,\n            expenses,\n            totalIncome,\n            addExpense,\n            getExpenses,\n            deleteExpense,\n            totalExpenses,\n            totalBalance,\n            transactionHistory,\n            error,\n            setError,\n            userId,\n            setUserId,\n            token,\n            setToken,\n            login,\n            logout,\n            isLoading\n        }}>\n            {children}\n        </GlobalContext.Provider>\n    );\n};\n\nexport const useGlobalContext = () => {\n    return useContext(GlobalContext);\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}