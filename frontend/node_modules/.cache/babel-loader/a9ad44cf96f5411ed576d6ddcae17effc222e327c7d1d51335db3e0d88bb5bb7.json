{"ast":null,"code":"var _jsxFileName = \"/home/chelsynew/Desktop/expense-tracker_fullstack/frontend/src/Components/Dashboard/Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport styled from 'styled-components';\nimport { useGlobalContext } from '../../context/globalContext';\nimport History from '../../History/History';\nimport { InnerLayout } from '../../styles/Layouts';\nimport Chart from '../Chart/Chart';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Dashboard() {\n  _s();\n  const {\n    totalExpenses,\n    incomes,\n    expenses,\n    totalIncome,\n    totalBalance,\n    getIncomes,\n    getExpenses\n  } = useGlobalContext();\n  useEffect(() => {\n    getIncomes();\n    getExpenses();\n  }, []);\n  const formatNumber = number => {\n    return new Intl.NumberFormat('fr-CM', {\n      style: 'currency',\n      currency: 'XAF',\n      minimumFractionDigits: 0,\n      maximumFractionDigits: 0\n    }).format(number);\n  };\n  return /*#__PURE__*/_jsxDEV(DashboardStyled, {\n    children: /*#__PURE__*/_jsxDEV(InnerLayout, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"All Transactions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stats-con\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-con\",\n          children: [/*#__PURE__*/_jsxDEV(Chart, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"amount-con\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"income\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                children: \"Total Income\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 34,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: formatNumber(totalIncome())\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 35,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"expense\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                children: \"Total Expense\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 38,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: formatNumber(totalExpenses())\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"balance\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                children: \"Total Balance\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: formatNumber(totalBalance())\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"history-con\",\n          children: [/*#__PURE__*/_jsxDEV(History, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"salary-title\",\n            children: [\"Min \", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Income\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 58\n            }, this), \" Max\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"salary-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: formatNumber(Math.min(...incomes.map(item => item.amount)))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: formatNumber(Math.max(...incomes.map(item => item.amount)))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"salary-title\",\n            children: [\"Min \", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Expense\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 58\n            }, this), \" Max\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"salary-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: formatNumber(Math.min(...expenses.map(item => item.amount)))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: formatNumber(Math.max(...expenses.map(item => item.amount)))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n}\n_s(Dashboard, \"jZq/B3gbjyhz+ppSG7h08G9OBDc=\", false, function () {\n  return [useGlobalContext];\n});\n_c = Dashboard;\nconst DashboardStyled = styled.div`\n    .stats-con {\n        display: grid;\n        grid-template-columns: repeat(5, 1fr);\n        gap: 2rem;\n\n        @media (max-width: 1200px) {\n            grid-template-columns: repeat(2, 1fr);\n        }\n\n        @media (max-width: 768px) {\n            grid-template-columns: 1fr;\n        }\n\n        .chart-con {\n            grid-column: 1 / 4;\n            height: 400px;\n\n            @media (max-width: 1200px) {\n                grid-column: 1 / -1;\n            }\n\n            .amount-con {\n                display: grid;\n                grid-template-columns: repeat(3, 1fr);\n                gap: 2rem;\n                margin-top: 2rem;\n\n                @media (max-width: 1200px) {\n                    grid-template-columns: repeat(3, 1fr);\n                }\n\n                @media (max-width: 768px) {\n                    grid-template-columns: 1fr;\n                }\n\n                .income, .expense, .balance {\n                    background: #FCF6F9;\n                    border: 2px solid #FFFFFF;\n                    box-shadow: 0px 1px 15px rgba(0, 0, 0, 0.06);\n                    border-radius: 20px;\n                    padding: 1rem;\n                    display: flex;\n                    flex-direction: column;\n                    justify-content: space-between;\n                    height: 100%;\n\n                    h2 {\n                        font-size: 1.5rem;\n                        margin-bottom: 0.5rem;\n\n                        @media (max-width: 1400px) {\n                            font-size: 1.2rem;\n                        }\n                    }\n\n                    p {\n                        font-size: 1.8rem;\n                        font-weight: 700;\n                        word-break: break-word;\n                        display: flex;\n                        align-items: center;\n\n                        @media (max-width: 1400px) {\n                            font-size: 1.5rem;\n                        }\n\n                        @media (max-width: 768px) {\n                            font-size: 1.8rem;\n                        }\n                    }\n                }\n\n                .balance p {\n                    color: var(--color-green);\n                    opacity: 0.6;\n                }\n            }\n        }\n\n        .history-con {\n            grid-column: 4 / -1;\n\n            @media (max-width: 1200px) {\n                grid-column: 1 / -1;\n            }\n\n            h2 {\n                margin: 1rem 0;\n                display: flex;\n                align-items: center;\n                justify-content: space-between;\n            }\n\n            .salary-title {\n                font-size: 1.2rem;\n                span {\n                    font-size: 1.8rem;\n                }\n            }\n\n            .salary-item {\n                background: #FCF6F9;\n                border: 2px solid #FFFFFF;\n                box-shadow: 0px 1px 15px rgba(0, 0, 0, 0.06);\n                padding: 1rem;\n                border-radius: 20px;\n                display: flex;\n                justify-content: space-between;\n                align-items: center;\n\n                p {\n                    font-weight: 600;\n                    font-size: 1.4rem;\n                    word-break: break-word;\n\n                    @media (max-width: 768px) {\n                        font-size: 1.2rem;\n                    }\n                }\n            }\n        }\n    }\n`;\n_c2 = DashboardStyled;\nexport default Dashboard;\nvar _c, _c2;\n$RefreshReg$(_c, \"Dashboard\");\n$RefreshReg$(_c2, \"DashboardStyled\");","map":{"version":3,"names":["React","useEffect","styled","useGlobalContext","History","InnerLayout","Chart","Dashboard","totalExpenses","incomes","expenses","totalIncome","totalBalance","getIncomes","getExpenses","formatNumber","number","Intl","NumberFormat","style","currency","minimumFractionDigits","maximumFractionDigits","format","Math","min","map","item","amount","max","DashboardStyled","div"],"sources":["/home/chelsynew/Desktop/expense-tracker_fullstack/frontend/src/Components/Dashboard/Dashboard.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport styled from 'styled-components';\nimport { useGlobalContext } from '../../context/globalContext';\nimport History from '../../History/History';\nimport { InnerLayout } from '../../styles/Layouts';\nimport Chart from '../Chart/Chart';\n\nfunction Dashboard() {\n    const { totalExpenses, incomes, expenses, totalIncome, totalBalance, getIncomes, getExpenses } = useGlobalContext();\n\n    useEffect(() => {\n        getIncomes();\n        getExpenses();\n    }, []);\n\n    const formatNumber = (number) => {\n        return new Intl.NumberFormat('fr-CM', {\n            style: 'currency',\n            currency: 'XAF',\n            minimumFractionDigits: 0,\n            maximumFractionDigits: 0\n        }).format(number);\n    };\n\n    return (\n        <DashboardStyled>\n            <InnerLayout>\n                <h1>All Transactions</h1>\n                <div className=\"stats-con\">\n                    <div className=\"chart-con\">\n                        <Chart />\n                        <div className=\"amount-con\">\n                            <div className=\"income\">\n                                <h2>Total Income</h2>\n                                <p>{formatNumber(totalIncome())}</p>\n                            </div>\n                            <div className=\"expense\">\n                                <h2>Total Expense</h2>\n                                <p>{formatNumber(totalExpenses())}</p>\n                            </div>\n                            <div className=\"balance\">\n                                <h2>Total Balance</h2>\n                                <p>{formatNumber(totalBalance())}</p>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"history-con\">\n                        <History />\n                        <h2 className=\"salary-title\">Min <span>Income</span> Max</h2>\n                        <div className=\"salary-item\">\n                            <p>{formatNumber(Math.min(...incomes.map(item => item.amount)))}</p>\n                            <p>{formatNumber(Math.max(...incomes.map(item => item.amount)))}</p>\n                        </div>\n                        <h2 className=\"salary-title\">Min <span>Expense</span> Max</h2>\n                        <div className=\"salary-item\">\n                            <p>{formatNumber(Math.min(...expenses.map(item => item.amount)))}</p>\n                            <p>{formatNumber(Math.max(...expenses.map(item => item.amount)))}</p>\n                        </div>\n                    </div>\n                </div>\n            </InnerLayout>\n        </DashboardStyled>\n    );\n}\n\nconst DashboardStyled = styled.div`\n    .stats-con {\n        display: grid;\n        grid-template-columns: repeat(5, 1fr);\n        gap: 2rem;\n\n        @media (max-width: 1200px) {\n            grid-template-columns: repeat(2, 1fr);\n        }\n\n        @media (max-width: 768px) {\n            grid-template-columns: 1fr;\n        }\n\n        .chart-con {\n            grid-column: 1 / 4;\n            height: 400px;\n\n            @media (max-width: 1200px) {\n                grid-column: 1 / -1;\n            }\n\n            .amount-con {\n                display: grid;\n                grid-template-columns: repeat(3, 1fr);\n                gap: 2rem;\n                margin-top: 2rem;\n\n                @media (max-width: 1200px) {\n                    grid-template-columns: repeat(3, 1fr);\n                }\n\n                @media (max-width: 768px) {\n                    grid-template-columns: 1fr;\n                }\n\n                .income, .expense, .balance {\n                    background: #FCF6F9;\n                    border: 2px solid #FFFFFF;\n                    box-shadow: 0px 1px 15px rgba(0, 0, 0, 0.06);\n                    border-radius: 20px;\n                    padding: 1rem;\n                    display: flex;\n                    flex-direction: column;\n                    justify-content: space-between;\n                    height: 100%;\n\n                    h2 {\n                        font-size: 1.5rem;\n                        margin-bottom: 0.5rem;\n\n                        @media (max-width: 1400px) {\n                            font-size: 1.2rem;\n                        }\n                    }\n\n                    p {\n                        font-size: 1.8rem;\n                        font-weight: 700;\n                        word-break: break-word;\n                        display: flex;\n                        align-items: center;\n\n                        @media (max-width: 1400px) {\n                            font-size: 1.5rem;\n                        }\n\n                        @media (max-width: 768px) {\n                            font-size: 1.8rem;\n                        }\n                    }\n                }\n\n                .balance p {\n                    color: var(--color-green);\n                    opacity: 0.6;\n                }\n            }\n        }\n\n        .history-con {\n            grid-column: 4 / -1;\n\n            @media (max-width: 1200px) {\n                grid-column: 1 / -1;\n            }\n\n            h2 {\n                margin: 1rem 0;\n                display: flex;\n                align-items: center;\n                justify-content: space-between;\n            }\n\n            .salary-title {\n                font-size: 1.2rem;\n                span {\n                    font-size: 1.8rem;\n                }\n            }\n\n            .salary-item {\n                background: #FCF6F9;\n                border: 2px solid #FFFFFF;\n                box-shadow: 0px 1px 15px rgba(0, 0, 0, 0.06);\n                padding: 1rem;\n                border-radius: 20px;\n                display: flex;\n                justify-content: space-between;\n                align-items: center;\n\n                p {\n                    font-weight: 600;\n                    font-size: 1.4rem;\n                    word-break: break-word;\n\n                    @media (max-width: 768px) {\n                        font-size: 1.2rem;\n                    }\n                }\n            }\n        }\n    }\n`;\n\nexport default Dashboard;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}